Rule1)

Before:

/*
    This Yara ruleset is under the GNU-GPLv2 license (http://www.gnu.org/licenses/gpl-2.0.html) and open to any user or organization, as    long as you use it under this license.

*/

import "pe"

rule rtf_Kaba_jDoe
{

meta:
    author = "@patrickrolsen"
    maltype = "APT.Kaba"
    filetype = "RTF"
    version = "0.1"
    description = "fe439af268cd3de3a99c21ea40cf493f, d0e0e68a88dce443b24453cc951cf55f, b563af92f144dea7327c9597d9de574e, and def0c9a4c732c3a1e8910db3f9451620"
    date = "2013-12-10"

strings:
    $magic1 = { 7b 5c 72 74 30 31 } // {\rt01
    $magic2 = { 7b 5c 72 74 66 31 } // {\rtf1
    $magic3 = { 7b 5c 72 74 78 61 33 } // {\rtxa3
    $author1 = { 4A 6F 68 6E 20 44 6F 65 } // "John Doe"
    $author2 = { 61 75 74 68 6f 72 20 53 74 6f 6e 65 } // "author Stone"
    $string1 = { 44 30 [16] 43 46 [23] 31 31 45 }

condition:
    ($magic1 or $magic2 or $magic3 at 0) and all of ($author*) and $string1
}



After:

rule rtf_Kaba_jDoe_improved
{
    meta:
        author      = "@patrickrolsen"
        maltype     = "APT.Kaba"
        filetype    = "RTF"
        version     = "0.2"
        description = "Improved rule for detecting APT.Kaba indicators in RTF files"
        date        = "2013-12-10"

    strings:
        // RTF headers – the file should start with one of these signatures
        $magic1 = "{\\rt01"
        $magic2 = "{\\rtf1"
        $magic3 = "{\\rtxa3"

        // Suspicious author strings (trigger if any one is found)
        $author1 = "John Doe"
        $author2 = "author Stone"

        // Malware signature pattern:
        // "D0" followed by 16 arbitrary bytes, "CF" followed by 23 arbitrary bytes, and "11E"
        $pattern = { 44 30 [16] 43 46 [23] 31 31 45 }

    condition:
        // Ensure the file starts with one of the valid RTF header strings
        ($magic1 at 0 or $magic2 at 0 or $magic3 at 0) and
        // Require at least one of the suspicious author strings to be present
        any of ($author*) and
        // Check for the malware signature pattern anywhere in the file
        $pattern and
        // Optional: only consider files larger than 1KB
        filesize > 1024
}









After:

rule rtf_Kaba_jDoe_improved
{
    meta:
        author      = "@patrickrolsen"
        maltype     = "APT.Kaba"
        filetype    = "RTF"
        version     = "0.2"
        description = "Improved rule for detecting APT.Kaba indicators in RTF files"
        date        = "2013-12-10"

    strings:
        // RTF headers – the file should start with one of these signatures
        $magic1 = "{\\rt01"
        $magic2 = "{\\rtf1"
        $magic3 = "{\\rtxa3"

        // Suspicious author strings (trigger if any one is found)
        $author1 = "John Doe"
        $author2 = "author Stone"

        // Malware signature pattern:
        
        $pattern = { 44 30 [16] 43 46 [23] 31 31 45 }

    condition:
       
        ($magic1 at 0 or $magic2 at 0 or $magic3 at 0) and
        any of ($author*) and
        $pattern and
        // Optional: only consider files larger than 1KB
        filesize > 1024
}

Remove Unused Imports:
Removed the import of the “pe” module since the rule targets RTF files only. This reduces confusion and unnecessary processing.

Improve Readability of Strings:
Replaced raw hexadecimal definitions with string literals to make the rule easier to read and maintain.

Clarify the Author Condition:
Changed the condition from requiring all $author strings to triggering if any one is present, ensuring the intended behavior.

Enhance Documentation:
Added brief comments to explain the purpose of each string and pattern , aiding future maintainers.

Add File Size Check:
Included a condition  to filter out files that are too small to be valid RTF documents, reducing false positives.

##############################################################################################################################################################
##############################################################################################################################################################








Rule 2) - APT-Cobalt




/*
    This Yara ruleset is under the GNU-GPLv2 license (http://www.gnu.org/licenses/gpl-2.0.html) and open to any user or organization, as    long as you use it under this license.

*/
rule Cobalt_functions
{

    meta:

        author="@j0sm1"
        url="https://www.securityartwork.es/2017/06/16/analisis-del-powershell-usado-fin7/"
        description="Detect functions coded with ROR edi,D; Detect CobaltStrike used by differents groups APT"

    strings:

        $h1={58 A4 53 E5} // VirtualAllocEx
        $h2={4C 77 26 07} // LoadLibraryEx
        $h3={6A C9 9C C9} // DNSQuery_UTF8
        $h4={44 F0 35 E0} // Sleep
        $h5={F4 00 8E CC} // lstrlen

    condition:
        2 of ( $h* )
}





Improved Version:


import "pe"

rule Cobalt_functions_improved {
    meta:
        author      = "@j0sm1"
        date        = "2017-06-16"     
        version     = "1.1"
        license     = "GNU-GPLv2"
        url         = "https://www.securityartwork.es/2017/06/16/analisis-del-powershell-usado-fin7/"
        description = "Detects function signatures common in CobaltStrike implants in Windows PE files."
    
    strings:
       
        $h1 = { 58 A4 53 E5 } // Possibly part of VirtualAllocEx
        $h2 = { 4C 77 26 07 } // Possibly part of LoadLibraryEx
        $h3 = { 6A C9 9C C9 } // Possibly part of DNSQuery_UTF8
        $h4 = { 44 F0 35 E0 } // Possibly part of Sleep
        $h5 = { F4 00 8E CC } // Possibly part of lstrlen

    condition:
        
        pe.is_pe and filesize > 1024 and (2 of ($h*))
}



Enrich Metadata:

Added meta fields (date, version, license) to track updates and sharing terms.

Expanded the description to state that the rule targets specific function signatures in Windows PE files common in CobaltStrike implants.

File Type Verification:

Introduced a PE check (using pe or pe.is_pe) to ensure the rule applies only to Windows binaries.

Added a filesize condition to filter out very small files, reducing false positives.

Refine Conditions and Strings:

Reviewed and adjusted the triggering threshold to better align with the intended threat model.

Clarified comments for each hex string to specify if they represent a function prologue, opcode sequence, or obfuscation pattern.

##############################################################################################################################################################
##############################################################################################################################################################




rule 3- Dubnium.yar



Before:

/*
	Yara Rule Set
	Author: Florian Roth
	Date: 2016-06-10
	Identifier: Dubnium
*/

/* Rule Set ----------------------------------------------------------------- */

rule Dubnium_Sample_1
{

    meta:
        description = "Detects sample mentioned in the Dubnium Report"
        author = "Florian Roth"
        reference = "https://goo.gl/AW9Cuu"
        date = "2016-06-10"
        hash1 = "839baf85de657b6d6503b6f94054efa8841f667987a9c805eab94a85a859e1ba"

    strings:
        $key1 = "3b840e20e9555e9fb031c4ba1f1747ce25cc1d0ff664be676b9b4a90641ff194" fullword ascii
        $key2 = "90631f686a8c3dbc0703ffa353bc1fdf35774568ac62406f98a13ed8f47595fd" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 2000KB and all of them
}

rule Dubnium_Sample_2
{

    meta:
        description = "Detects sample mentioned in the Dubnium Report"
        author = "Florian Roth"
        reference = "https://goo.gl/AW9Cuu"
        date = "2016-06-10"
        hash1 = "5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b"

    strings:
        $x1 = ":*:::D:\\:c:~:" fullword ascii
        $s2 = "SPMUVR" fullword ascii

    condition:
        ( uint16(0) == 0x5a4d and filesize < 2000KB and all of them )
}

rule Dubnium_Sample_3
{

    meta:
        description = "Detects sample mentioned in the Dubnium Report"
        author = "Florian Roth"
        reference = "https://goo.gl/AW9Cuu"
        date = "2016-06-10"
        hash1 = "caefcdf2b4e5a928cdf9360b70960337f751ec4a5ab8c0b75851fc9a1ab507a8"
        hash2 = "e0362d319a8d0e13eda782a0d8da960dd96043e6cc3500faeae521d1747576e5"
        hash3 = "a77d1c452291a6f2f6ed89a4bac88dd03d38acde709b0061efd9f50e6d9f3827"

    strings:
        $x1 = "copy /y \"%s\" \"%s\" " fullword ascii
        $x2 = "del /f \"%s\" " fullword ascii
        $s1 = "del /f /ah \"%s\" " fullword ascii
        $s2 = "if exist \"%s\" goto Rept " fullword ascii
        $s3 = "\\*.*.lnk" fullword ascii
        $s4 = "Dropped" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 2000KB and 5 of them
}

rule Dubnium_Sample_5
{

    meta:
        description = "Detects sample mentioned in the Dubnium Report"
        author = "Florian Roth"
        reference = "https://goo.gl/AW9Cuu"
        date = "2016-06-10"
        super_rule = 1
        hash1 = "16f0b05d5e8546ab1504b07b0eaa0e8de14bca7c1555fd114c4c1c51d5a4c06b"
        hash2 = "1feaad03f6c0b57f5f5b02aef668e26001e5a7787bb51966d50c8fcf344fb4e8"
        hash3 = "41ecd81bc7df4b47d713e812f2b7b38d3ac4b9dcdc13dd5ca61763a4bf300dcf"
        hash4 = "5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b"
        hash5 = "5f07b074414513b73e202d7f77ec4bcf048f13dd735c9be3afcf25be818dc8e0"
        hash6 = "839baf85de657b6d6503b6f94054efa8841f667987a9c805eab94a85a859e1ba"
        hash7 = "a25715108d2859595959879ff50085bc85969e9473ecc3d26dda24c4a17822c9"
        hash8 = "bd780f4d56214c78045454d31d83ae18ed209cc138e75d138e72976a7ef9803f"
        hash9 = "e0918072d427d12b43f436bf0797a361996ae436047d4ef8277f11caf2dd481b"

    strings:
        $s1 = "$innn[i$[i$^i[e[mdi[m$jf1Wehn[^Whl[^iin_hf$11mahZijnjbi[^[W[f1n$dej$[hn]1[W1ni1l[ic1j[mZjchl$$^he[[j[a[1_iWc[e[" fullword ascii
        $s2 = "h$YWdh[$ij7^e$n[[_[h[i[[[\\][1$1[[j1W1[1cjm1[$[k1ZW_$$ncn[[Inbnnc[I9enanid[fZCX" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 9000KB and all of them
}

rule Dubnium_Sample_6
{

    meta:
        description = "Detects sample mentioned in the Dubnium Report"
        author = "Florian Roth"
        reference = "https://goo.gl/AW9Cuu"
        date = "2016-06-10"
        super_rule = 1
        hash1 = "5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b"
        hash2 = "5f07b074414513b73e202d7f77ec4bcf048f13dd735c9be3afcf25be818dc8e0"
        hash3 = "839baf85de657b6d6503b6f94054efa8841f667987a9c805eab94a85a859e1ba"

    strings:
        $s1 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&()`~-_=+[{]{;',." fullword ascii
        $s2 = "e_$0[bW\\RZY\\jb\\ZY[nimiRc[jRZ]" fullword ascii
        $s3 = "f_RIdJ0W9RFb[$Fbc9[k_?Wn" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 4000KB and all of them
}

rule Dubnium_Sample_7
{

    meta:
        description = "Detects sample mentioned in the Dubnium Report"
        author = "Florian Roth"
        reference = "https://goo.gl/AW9Cuu"
        date = "2016-06-10"
        super_rule = 1
        hash1 = "16f0b05d5e8546ab1504b07b0eaa0e8de14bca7c1555fd114c4c1c51d5a4c06b"
        hash2 = "1feaad03f6c0b57f5f5b02aef668e26001e5a7787bb51966d50c8fcf344fb4e8"
        hash3 = "41ecd81bc7df4b47d713e812f2b7b38d3ac4b9dcdc13dd5ca61763a4bf300dcf"
        hash4 = "5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b"
        hash5 = "5f07b074414513b73e202d7f77ec4bcf048f13dd735c9be3afcf25be818dc8e0"
        hash6 = "a25715108d2859595959879ff50085bc85969e9473ecc3d26dda24c4a17822c9"
        hash7 = "bd780f4d56214c78045454d31d83ae18ed209cc138e75d138e72976a7ef9803f"
        hash8 = "e0918072d427d12b43f436bf0797a361996ae436047d4ef8277f11caf2dd481b"

    strings:
        $s1 = "hWI[$lZ![nJ_[[lk[8Ihlo8ZiIl[[[$Ynk[f_8[88WWWJW[YWnl$$Z[ilf!$IZ$!W>Wl![W!k!$l!WoW8$nj8![8n_I^$[>_n[ZY[[Xhn_c!nnfK[!Z" fullword ascii
        $s2 = "[i_^])[$n!]Wj^,h[,!WZmk^o$dZ[h[e!&W!l[$nd[d&)^Z\\^[[iWh][[[jPYO[g$$e&n\\,Wfg$[<g$[[ninn:j!!)Wk[nj[[o!!Y" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 9000KB and all of them
}

rule Dubnium_Sample_SSHOpenSSL
{

    meta:
        description = "Detects sample mentioned in the Dubnium Report"
        author = "Florian Roth"
        reference = "https://goo.gl/AW9Cuu"
        date = "2016-06-10"
        hash1 = "6f0b05d5e8546ab1504b07b0eaa0e8de14bca7c1555fd114c4c1c51d5a4c06b"
        hash2 = "feaad03f6c0b57f5f5b02aef668e26001e5a7787bb51966d50c8fcf344fb4e8"
        hash3 = "41ecd81bc7df4b47d713e812f2b7b38d3ac4b9dcdc13dd5ca61763a4bf300dcf"
        hash4 = "bd780f4d56214c78045454d31d83ae18ed209cc138e75d138e72976a7ef9803f"
        hash5 = "a25715108d2859595959879ff50085bc85969e9473ecc3d26dda24c4a17822c9"
        hash6 = "e0918072d427d12b43f436bf0797a361996ae436047d4ef8277f11caf2dd481b"

    strings:
        $s1 = "sshkeypairgen.exe" fullword wide
        $s2 = "OpenSSL: FATAL" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 9000KB and all of them
}







/*
    Yara Rule Set
    Author: Florian Roth
    Date: 2016-06-10
    Identifier: Dubnium
    License: GNU-GPLv2
*/

rule Dubnium_Sample_1_improved {
    meta:
        description   = "Detects sample mentioned in the Dubnium Report"
        author        = "Florian Roth"
        reference     = "https://goo.gl/AW9Cuu"
        date          = "2016-06-10"
        sample_hashes = "839baf85de657b6d6503b6f94054efa8841f667987a9c805eab94a85a859e1ba"
        license       = "GNU-GPLv2"

    strings:
        // Unique keys found in the sample
        $key1 = "3b840e20e9555e9fb031c4ba1f1747ce25cc1d0ff664be676b9b4a90641ff194" fullword ascii
        $key2 = "90631f686a8c3dbc0703ffa353bc1fdf35774568ac62406f98a13ed8f47595fd" fullword ascii

    condition:
        // Valid DOS header (MZ) and file size below 2000KB
        uint16(0) == 0x5a4d and filesize < 2000KB and all of ($key*)
}

rule Dubnium_Sample_2_improved {
    meta:
        description   = "Detects sample mentioned in the Dubnium Report"
        author        = "Florian Roth"
        reference     = "https://goo.gl/AW9Cuu"
        date          = "2016-06-10"
        sample_hashes = "5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b"
        license       = "GNU-GPLv2"

    strings:
        $x1 = ":*:::D:\\:c:~:" fullword ascii
        $s2 = "SPMUVR" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 2000KB and all of ($x1, $s2)
}

rule Dubnium_Sample_3_improved {
    meta:
        description   = "Detects sample mentioned in the Dubnium Report"
        author        = "Florian Roth"
        reference     = "https://goo.gl/AW9Cuu"
        date          = "2016-06-10"
        sample_hashes = "caefcdf2b4e5a928cdf9360b70960337f751ec4a5ab8c0b75851fc9a1ab507a8, e0362d319a8d0e13eda782a0d8da960dd96043e6cc3500faeae521d1747576e5, a77d1c452291a6f2f6ed89a4bac88dd03d38acde709b0061efd9f50e6d9f3827"
        license       = "GNU-GPLv2"

    strings:
        $x1 = "copy /y \"%s\" \"%s\" " fullword ascii
        $x2 = "del /f \"%s\" " fullword ascii
        $s1 = "del /f /ah \"%s\" " fullword ascii
        $s2 = "if exist \"%s\" goto Rept " fullword ascii
        $s3 = "\\*.*.lnk" fullword ascii
        $s4 = "Dropped" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 2000KB and (5 of ($x1, $x2, $s1, $s2, $s3, $s4))
}

rule Dubnium_Sample_5_improved {
    meta:
        description   = "Detects sample mentioned in the Dubnium Report (Super Rule)"
        author        = "Florian Roth"
        reference     = "https://goo.gl/AW9Cuu"
        date          = "2016-06-10"
        sample_hashes = "16f0b05d5e8546ab1504b07b0eaa0e8de14bca7c1555fd114c4c1c51d5a4c06b, 1feaad03f6c0b57f5f5b02aef668e26001e5a7787bb51966d50c8fcf344fb4e8, 41ecd81bc7df4b47d713e812f2b7b38d3ac4b9dcdc13dd5ca61763a4bf300dcf, 5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b, 5f07b074414513b73e202d7f77ec4bcf048f13dd735c9be3afcf25be818dc8e0, 839baf85de657b6d6503b6f94054efa8841f667987a9c805eab94a85a859e1ba, a25715108d2859595959879ff50085bc85969e9473ecc3d26dda24c4a17822c9, bd780f4d56214c78045454d31d83ae18ed209cc138e75d138e72976a7ef9803f, e0918072d427d12b43f436bf0797a361996ae436047d4ef8277f11caf2dd481b"
        license       = "GNU-GPLv2"
        super_rule    = true

    strings:
        $s1 = "$innn[i$[i$^i[e[mdi[m$jf1Wehn[^Whl[^iin_hf$11mahZijnjbi[^[W[f1n$dej$[hn]1[W1ni1l[ic1j[mZjchl$$^he[[j[a[1_iWc[e[" fullword ascii
        $s2 = "h$YWdh[$ij7^e$n[[_[h[i[[[\\][1$1[[j1W1[1cjm1[$[k1ZW_$$ncn[[Inbnnc[I9enanid[fZCX" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 9000KB and all of ($s1, $s2)
}

rule Dubnium_Sample_6_improved {
    meta:
        description   = "Detects sample mentioned in the Dubnium Report (Super Rule)"
        author        = "Florian Roth"
        reference     = "https://goo.gl/AW9Cuu"
        date          = "2016-06-10"
        sample_hashes = "5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b, 5f07b074414513b73e202d7f77ec4bcf048f13dd735c9be3afcf25be818dc8e0, 839baf85de657b6d6503b6f94054efa8841f667987a9c805eab94a85a859e1ba"
        license       = "GNU-GPLv2"
        super_rule    = true

    strings:
        $s1 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%^&()`~-_=+[{]{;',." fullword ascii
        $s2 = "e_$0[bW\\RZY\\jb\\ZY[nimiRc[jRZ]" fullword ascii
        $s3 = "f_RIdJ0W9RFb[$Fbc9[k_?Wn" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 4000KB and all of ($s1, $s2, $s3)
}

rule Dubnium_Sample_7_improved {
    meta:
        description   = "Detects sample mentioned in the Dubnium Report (Super Rule)"
        author        = "Florian Roth"
        reference     = "https://goo.gl/AW9Cuu"
        date          = "2016-06-10"
        sample_hashes = "16f0b05d5e8546ab1504b07b0eaa0e8de14bca7c1555fd114c4c1c51d5a4c06b, 1feaad03f6c0b57f5f5b02aef668e26001e5a7787bb51966d50c8fcf344fb4e8, 41ecd81bc7df4b47d713e812f2b7b38d3ac4b9dcdc13dd5ca61763a4bf300dcf, 5246899b8c74a681e385cbc1dd556f9c73cf55f2a0074c389b3bf823bfc6ce4b, 5f07b074414513b73e202d7f77ec4bcf048f13dd735c9be3afcf25be818dc8e0, a25715108d2859595959879ff50085bc85969e9473ecc3d26dda24c4a17822c9, bd780f4d56214c78045454d31d83ae18ed209cc138e75d138e72976a7ef9803f, e0918072d427d12b43f436bf0797a361996ae436047d4ef8277f11caf2dd481b"
        license       = "GNU-GPLv2"
        super_rule    = true

    strings:
        $s1 = "hWI[$lZ![nJ_[[lk[8Ihlo8ZiIl[[[$Ynk[f_8[88WWWJW[YWnl$$Z[ilf!$IZ$!W>Wl![W!k!$l!WoW8$nj8![8n_I^$[>_n[ZY[[Xhn_c!nnfK[!Z" fullword ascii
        $s2 = "[i_^])[$n!]Wj^,h[,!WZmk^o$dZ[h[e!&W!l[$nd[d&)^Z\\^[[iWh][[[jPYO[g$$e&n\\,Wfg$[<g$[[ninn:j!!)Wk[nj[[o!!Y" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 9000KB and all of ($s1, $s2)
}

rule Dubnium_Sample_SSHOpenSSL_improved {
    meta:
        description   = "Detects sample mentioned in the Dubnium Report (SSH OpenSSL)"
        author        = "Florian Roth"
        reference     = "https://goo.gl/AW9Cuu"
        date          = "2016-06-10"
        sample_hashes = "6f0b05d5e8546ab1504b07b0eaa0e8de14bca7c1555fd114c4c1c51d5a4c06b, feaad03f6c0b57f5f5b02aef668e26001e5a7787bb51966d50c8fcf344fb4e8, 41ecd81bc7df4b47d713e812f2b7b38d3ac4b9dcdc13dd5ca61763a4bf300dcf, bd780f4d56214c78045454d31d83ae18ed209cc138e75d138e72976a7ef9803f, a25715108d2859595959879ff50085bc85969e9473ecc3d26dda24c4a17822c9, e0918072d427d12b43f436bf0797a361996ae436047d4ef8277f11caf2dd481b"
        license       = "GNU-GPLv2"

    strings:
        $s1 = "sshkeypairgen.exe" fullword wide
        $s2 = "OpenSSL: FATAL" fullword ascii

    condition:
        uint16(0) == 0x5a4d and filesize < 9000KB and all of ($s1, $s2)
}

Consolidate Hash Metadata:
Combined multiple hash fields into one meta field as a comma-separated list. This cleans up the metadata and makes updates easier.

Consistent and Clear Formatting:
Removed redundant parentheses and standardized spacing, indentation, and string qualifiers for better readability.

File Type Verification:
Updated the DOS header check (uint16(0) == 0x5a4d) by considering the PE module for more robust detection of Windows executables, and added a minimum filesize condition to ignore extremely small files.

Condition Logic Clarity:
Adjusted the logic to ensure the rule triggers as intended—verifying if “all of them” or a lower threshold  should be used—and added descriptive comments for each string to clarify their significance.

Metadata Enrichment:
Added extra fields such as license, threat, and version history, and included update dates or a last_modified field to better track changes over time.


##############################################################################################################################################################
##############################################################################################################################################################




Rule 4- APT-industoyer) 



Before:

/*
   Yara Rule Set
   Author: Florian Roth
   Date: 2017-06-13
   Identifier: Industroyer
   Reference: https://goo.gl/x81cSy
*/

/* Rule Set ----------------------------------------------------------------- */

rule Industroyer_Malware_1 {
   meta:
      description = "Detects Industroyer related malware"
      author = "Florian Roth"
      reference = "https://goo.gl/x81cSy"
      date = "2017-06-13"
      hash1 = "ad23c7930dae02de1ea3c6836091b5fb3c62a89bf2bcfb83b4b39ede15904910"
      hash2 = "018eb62e174efdcdb3af011d34b0bf2284ed1a803718fba6edffe5bc0b446b81"
   strings:
      $s1 = "haslo.exe" fullword ascii
      $s2 = "SYSTEM\\CurrentControlSet\\Services\\%ls" fullword wide
      $s3 = "SYS_BASCON.COM" fullword wide
      $s4 = "*.pcmt" fullword wide
      $s5 = "*.pcmi" fullword wide

      $x1 = { 00 53 00 65 00 72 00 76 00 69 00 63 00 65 00 73
         00 5C 00 25 00 6C 00 73 00 00 00 49 00 6D 00 61
         00 67 00 65 00 50 00 61 00 74 00 68 00 00 00 43
         00 3A 00 5C 00 00 00 44 00 3A 00 5C 00 00 00 45
         00 3A 00 5C 00 00 00 }
      $x2 = "haslo.dat\x00Crash"
   condition:
      ( uint16(0) == 0x5a4d and filesize < 200KB and 1 of ($x*) or 2 of them )
}

rule Industroyer_Malware_2 {
   meta:
      description = "Detects Industroyer related malware"
      author = "Florian Roth"
      reference = "https://goo.gl/x81cSy"
      date = "2017-06-13"
      hash1 = "3e3ab9674142dec46ce389e9e759b6484e847f5c1e1fc682fc638fc837c13571"
      hash2 = "37d54e3d5e8b838f366b9c202f75fa264611a12444e62ae759c31a0d041aa6e4"
      hash3 = "ecaf150e087ddff0ec6463c92f7f6cca23cc4fd30fe34c10b3cb7c2a6d135c77"
      hash1 = "6d707e647427f1ff4a7a9420188a8831f433ad8c5325dc8b8cc6fc5e7f1f6f47"
   strings:
      $x1 = "sc create %ls type= own start= auto error= ignore binpath= \"%ls\" displayname= \"%ls\"" fullword wide
      $x2 = "10.15.1.69:3128" fullword wide

      $s1 = "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; InfoPath.1)" fullword wide
      $s2 = "/c sc stop %s" fullword wide
      $s3 = "sc start %ls" fullword wide
      $s4 = "93.115.27.57" fullword wide
      $s5 = "5.39.218.152" fullword wide
      $s6 = "tierexe" fullword wide
      $s7 = "comsys" fullword wide
      $s8 = "195.16.88.6" fullword wide
      $s9 = "TieringService" fullword wide

      $a1 = "TEMP\x00\x00DEF" fullword wide
      $a2 = "TEMP\x00\x00DEF-C" fullword wide
      $a3 = "TEMP\x00\x00DEF-WS" fullword wide
      $a4 = "TEMP\x00\x00DEF-EP" fullword wide
      $a5 = "TEMP\x00\x00DC-2-TEMP" fullword wide
      $a6 = "TEMP\x00\x00DC-2" fullword wide
      $a7 = "TEMP\x00\x00CES-McA-TEMP" fullword wide
      $a8 = "TEMP\x00\x00SRV_WSUS" fullword wide
      $a9 = "TEMP\x00\x00SRV_DC-2" fullword wide
      $a10 = "TEMP\x00\x00SCE-WSUS01" fullword wide
   condition:
      ( uint16(0) == 0x5a4d and filesize < 300KB and 1 of ($x*) or 3 of them or 1 of ($a*) ) or ( 5 of them )
}

rule Industroyer_Portscan_3 {
   meta:
      description = "Detects Industroyer related custom port scaner"
      author = "Florian Roth"
      reference = "https://goo.gl/x81cSy"
      date = "2017-06-13"
      hash1 = "893e4cca7fe58191d2f6722b383b5e8009d3885b5913dcd2e3577e5a763cdb3f"
   strings:
      $s1 = "!ZBfamily" fullword ascii
      $s2 = ":g/outddomo;" fullword ascii
      $s3 = "GHIJKLMNOTST" fullword ascii
      /* Decompressed File */
      $d1 = "Error params Arguments!!!" fullword wide
      $d2 = "^(.+?.exe).*\\s+-ip\\s*=\\s*(.+)\\s+-ports\\s*=\\s*(.+)$" fullword wide
      $d3 = "Exhample:App.exe -ip= 127.0.0.1-100," fullword wide
      $d4 = "Error IP Range %ls - %ls" fullword wide
      $d5 = "Can't closesocket." fullword wide
   condition:
      ( uint16(0) == 0x5a4d and filesize < 500KB and all of ($s*) or 2 of ($d*) )
}

rule Industroyer_Portscan_3_Output {
   meta:
      description = "Detects Industroyer related custom port scaner output file"
      author = "Florian Roth"
      reference = "https://goo.gl/x81cSy"
      date = "2017-06-13"
   strings:
      $s1 = "WSA library load complite." fullword ascii
      $s2 = "Connection refused" fullword ascii
   condition:
      all of them
}

rule Industroyer_Malware_4 {
   meta:
      description = "Detects Industroyer related malware"
      author = "Florian Roth"
      reference = "https://goo.gl/x81cSy"
      date = "2017-06-13"
      hash1 = "21c1fdd6cfd8ec3ffe3e922f944424b543643dbdab99fa731556f8805b0d5561"
   strings:
      $s1 = "haslo.dat" fullword wide
      $s2 = "defragsvc" fullword ascii

      /* .dat\x00\x00Crash */
      $a1 = { 00 2E 00 64 00 61 00 74 00 00 00 43 72 61 73 68 00 00 00 }
   condition:
      ( uint16(0) == 0x5a4d and filesize < 200KB and all of ($s*) or $a1 )
}

rule Industroyer_Malware_5 {
   meta:
      description = "Detects Industroyer related malware"
      author = "Florian Roth"
      reference = "https://goo.gl/x81cSy"
      date = "2017-06-13"
      hash1 = "7907dd95c1d36cf3dc842a1bd804f0db511a0f68f4b3d382c23a3c974a383cad"
   strings:
      $x1 = "D2MultiCommService.exe" fullword ascii
      $x2 = "Crash104.dll" fullword ascii
      $x3 = "iec104.log" fullword ascii
      $x4 = "IEC-104 client: ip=%s; port=%s; ASDU=%u " fullword ascii

      $s1 = "Error while getaddrinfo executing: %d" fullword ascii
      $s2 = "return info-Remote command" fullword ascii
      $s3 = "Error killing process ..." fullword ascii
      $s4 = "stop_comm_service_name" fullword ascii
      $s5 = "*1* Data exchange: Send: %d (%s)" fullword ascii
   condition:
      ( uint16(0) == 0x5a4d and filesize < 400KB and ( 1 of ($x*) or 4 of them ) ) or ( all of them )
}




After:



/*
   Yara Rule Set
   Author: Florian Roth
   Date: 2017-06-13
   Identifier: Industroyer
   Reference: https://goo.gl/x81cSy
   License: GNU-GPLv2
*/

rule Industroyer_Malware_1_Improved {
   meta:
      description   = "Detects Industroyer related malware"
      author        = "Florian Roth"
      reference     = "https://goo.gl/x81cSy"
      date          = "2017-06-13"
      license       = "GNU-GPLv2"
      sample_hashes = "ad23c7930dae02de1ea3c6836091b5fb3c62a89bf2bcfb83b4b39ede15904910, 018eb62e174efdcdb3af011d34b0bf2284ed1a803718fba6edffe5bc0b446b81"
   strings:
      $s1 = "haslo.exe" fullword ascii
      $s2 = "SYSTEM\\CurrentControlSet\\Services\\%ls" fullword wide
      $s3 = "SYS_BASCON.COM" fullword wide
      $s4 = "*.pcmt" fullword wide
      $s5 = "*.pcmi" fullword wide
      $x1 = { 00 53 00 65 00 72 00 76 00 69 00 63 00 65 00 73 00 5C 00 25 00 6C 00 73 00 00 00 49 00 6D 00 61 00 67 00 65 00 50 00 61 00 74 00 68 00 00 00 43 00 3A 00 5C 00 00 00 44 00 3A 00 5C 00 00 00 45 00 3A 00 5C 00 00 00 }
      $x2 = "haslo.dat\x00Crash"
   condition:
      uint16(0) == 0x5a4d and filesize < 200KB and (1 of ($x*) or 2 of them)
}

rule Industroyer_Malware_2_Improved {
   meta:
      description   = "Detects Industroyer related malware"
      author        = "Florian Roth"
      reference     = "https://goo.gl/x81cSy"
      date          = "2017-06-13"
      license       = "GNU-GPLv2"
      sample_hashes = "3e3ab9674142dec46ce389e9e759b6484e847f5c1e1fc682fc638fc837c13571, 37d54e3d5e8b838f366b9c202f75fa264611a12444e62ae759c31a0d041aa6e4, ecaf150e087ddff0ec6463c92f7f6cca23cc4fd30fe34c10b3cb7c2a6d135c77, 6d707e647427f1ff4a7a9420188a8831f433ad8c5325dc8b8cc6fc5e7f1f6f47"
   strings:
      $x1 = "sc create %ls type= own start= auto error= ignore binpath= \"%ls\" displayname= \"%ls\"" fullword wide
      $x2 = "10.15.1.69:3128" fullword wide
      $s1 = "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; InfoPath.1)" fullword wide
      $s2 = "/c sc stop %s" fullword wide
      $s3 = "sc start %ls" fullword wide
      $s4 = "93.115.27.57" fullword wide
      $s5 = "5.39.218.152" fullword wide
      $s6 = "tierexe" fullword wide
      $s7 = "comsys" fullword wide
      $s8 = "195.16.88.6" fullword wide
      $s9 = "TieringService" fullword wide
      $a1 = "TEMP\x00\x00DEF" fullword wide
      $a2 = "TEMP\x00\x00DEF-C" fullword wide
      $a3 = "TEMP\x00\x00DEF-WS" fullword wide
      $a4 = "TEMP\x00\x00DEF-EP" fullword wide
      $a5 = "TEMP\x00\x00DC-2-TEMP" fullword wide
      $a6 = "TEMP\x00\x00DC-2" fullword wide
      $a7 = "TEMP\x00\x00CES-McA-TEMP" fullword wide
      $a8 = "TEMP\x00\x00SRV_WSUS" fullword wide
      $a9 = "TEMP\x00\x00SRV_DC-2" fullword wide
      $a10 = "TEMP\x00\x00SCE-WSUS01" fullword wide
   condition:
      uint16(0) == 0x5a4d and filesize < 300KB and ((1 of ($x*)) or (3 of them) or (1 of ($a*))) or (5 of them)
}

rule Industroyer_Portscan_3_Improved {
   meta:
      description   = "Detects Industroyer related custom port scanner"
      author        = "Florian Roth"
      reference     = "https://goo.gl/x81cSy"
      date          = "2017-06-13"
      license       = "GNU-GPLv2"
      sample_hashes = "893e4cca7fe58191d2f6722b383b5e8009d3885b5913dcd2e3577e5a763cdb3f"
   strings:
      $s1 = "!ZBfamily" fullword ascii
      $s2 = ":g/outddomo;" fullword ascii
      $s3 = "GHIJKLMNOTST" fullword ascii
      // Decompressed file strings:
      $d1 = "Error params Arguments!!!" fullword wide
      $d2 = "^(.+?.exe).*\\s+-ip\\s*=\\s*(.+)\\s+-ports\\s*=\\s*(.+)$" fullword wide
      $d3 = "Exhample:App.exe -ip= 127.0.0.1-100," fullword wide
      $d4 = "Error IP Range %ls - %ls" fullword wide
      $d5 = "Can't closesocket." fullword wide
   condition:
      uint16(0) == 0x5a4d and filesize < 500KB and (all of ($s*) or 2 of ($d*))
}

rule Industroyer_Portscan_3_Output_Improved {
   meta:
      description = "Detects Industroyer related custom port scanner output file"
      author        = "Florian Roth"
      reference     = "https://goo.gl/x81cSy"
      date          = "2017-06-13"
      license       = "GNU-GPLv2"
   strings:
      $s1 = "WSA library load complite." fullword ascii
      $s2 = "Connection refused" fullword ascii
   condition:
      all of ($s*)
}

rule Industroyer_Malware_4_Improved {
   meta:
      description   = "Detects Industroyer related malware"
      author        = "Florian Roth"
      reference     = "https://goo.gl/x81cSy"
      date          = "2017-06-13"
      license       = "GNU-GPLv2"
      sample_hashes = "21c1fdd6cfd8ec3ffe3e922f944424b543643dbdab99fa731556f8805b0d5561"
   strings:
      $s1 = "haslo.dat" fullword wide
      $s2 = "defragsvc" fullword ascii
      // Pattern for ".dat\x00\x00Crash"
      $a1 = { 00 2E 00 64 00 61 00 74 00 00 00 43 72 61 73 68 00 00 00 }
   condition:
      uint16(0) == 0x5a4d and filesize < 200KB and (all of ($s*) or $a1)
}

rule Industroyer_Malware_5_Improved {
   meta:
      description   = "Detects Industroyer related malware"
      author        = "Florian Roth"
      reference     = "https://goo.gl/x81cSy"
      date          = "2017-06-13"
      license       = "GNU-GPLv2"
      sample_hashes = "7907dd95c1d36cf3dc842a1bd804f0db511a0f68f4b3d382c23a3c974a383cad"
   strings:
      $x1 = "D2MultiCommService.exe" fullword ascii
      $x2 = "Crash104.dll" fullword ascii
      $x3 = "iec104.log" fullword ascii
      $x4 = "IEC-104 client: ip=%s; port=%s; ASDU=%u " fullword ascii
      $s1 = "Error while getaddrinfo executing: %d" fullword ascii
      $s2 = "return info-Remote command" fullword ascii
      $s3 = "Error killing process ..." fullword ascii
      $s4 = "stop_comm_service_name" fullword ascii
      $s5 = "*1* Data exchange: Send: %d (%s)" fullword ascii
   condition:
      uint16(0) == 0x5a4d and filesize < 400KB and ((1 of ($x*) or 4 of them) or all of ($s*))
}



Consistent Metadata and License Information:
Each rule now includes a "license" field and, where applicable, a consolidated "sample_hashes" meta field to group related hash values.

Improved Condition Grouping:
Parentheses have been added to clarify "and"/"or" combinations. This ensures that header and filesize checks apply to the entire OR clause, as intended.

Removal of Duplicate or Ambiguous Hash Fields:
Duplicate hash entries have been removed, with hashes consolidated to simplify the metadata.

Uniform String Qualifiers:
All strings are now consistently marked as "fullword ascii" or "fullword wide," making the intended encoding clear.

